chromI_lag_tss <- read.csv(file_name, row.names = 1, col.names = c("chrom",	"start",	"strand",	"gene",	samples_dRNA , "cluster"))
# TSS cluster with support of at least two samples were selected
cluster_filtered <- chromI_lag_tss %>% pivot_longer(cols = c(starts_with("LIC"), starts_with("Q")), names_to = "samples", values_to = "present") %>% subset(!is.na(present)) %>% group_by(cluster) %>% count() %>% subset(!n < 2) %>% select(cluster) %>% unlist()
# in every cluster, the most far left (5') site were identified as teh TSS of the cluster, only cluster with at least 2 samples were selected
chromI_lag_tss_filtered <- chromI_lag_tss %>% pivot_longer(cols = c(starts_with("LIC"), starts_with("Q")), names_to = "samples", values_to = "present") %>% subset(!is.na(present)) %>%  group_by(cluster) %>% mutate(TSS_max = max(start)) %>% select(-start) %>% ungroup() %>% distinct() %>% pivot_wider(names_from = samples, values_from = present)#%>% subset(!((is.na(LIC.dRNA.cDNA.polyA) | is.na(LIC.dRNA.polyA)) & !cluster %in% cluster_filtered)) %>% distinct(.keep_all = TRUE) # drop TSS didn't identify in both of the polyA dRNA samples, and also only existed once in other samples.
chromI_lag_tss_filtered
}
# identify TSS using cDNA samples
lag_TSS_files_cDNA <- list.files(file.path(tu_path, "output", "raw_TSS_clustered"), pattern = "*lagrawcDNA_raw_TSS_clustered_10.csv", full.names = TRUE)
lag_TSS_filtered_list <- lapply(lag_TSS_files_cDNA, filter_lag_TSS_cDNA)
cDNA_TSS_final <- do.call(rbind, lag_TSS_filtered_list)%>% group_by(chrom)  %>% arrange(TSS_max, .by_group = TRUE)%>% distinct(cluster, .keep_all = TRUE)%>% select(!c("cluster"))
cDNA_TSS_final
# identify TSS using dRNA samples
lag_TSS_files_dRNA <- list.files(file.path(tu_path, "output", "raw_TSS_clustered"), pattern = "*lagrawdRNA_raw_TSS_clustered_10.csv", full.names = TRUE)
lag_TSS_filtered_list <- lapply(lag_TSS_files_dRNA, filter_lag_TSS_dRNA)
dRNA_TSS_final <-  do.call(rbind, lag_TSS_filtered_list) %>% arrange(chrom) %>% arrange(TSS_max, .by_group = TRUE)%>% distinct(cluster, .keep_all = TRUE)%>% select(!c("cluster"))
dRNA_TSS_final
cDNA_TSS_final$seq_method <- "cDNA"
dRNA_TSS_final$seq_method <- "dRNA"
dRNA_cDNA_lag_combined <- rbind(cDNA_TSS_final %>% select(!starts_with("LIC")), dRNA_TSS_final %>% select(!c(starts_with("LIC"), starts_with("Q")))) %>% group_by(chrom) %>% arrange(TSS_max, .by_group = TRUE)
write.csv(dRNA_cDNA_lag_combined, file.path(tu_path,"output", "combined","cDNA_dRNA_lag_TSS.csv"))
?grepl
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyr)
library(ggplot2)
tu_path <- "/Users/rx32940/Dropbox/5.Rachel-projects/Transcriptomics_PolyATail/tu_annotation/TTS"
tts_window_cDNA <- read.csv(file.path(tu_path, "window","cDNA_samples_window_search_TTS.tab"), sep="\t") %>% mutate(samples=
case_when(
sample == "Copenhageni_Basecalled_Aug_16_2019_Direct-cDNA_NoPolyATail_Qiagen_rna_filtered" ~ "LIC-cDNA-nonpolyA_Q",
sample =="Copenhageni_Basecalled_Aug_16_2019_Direct-cDNA_NoPolyATail_rna_filtered" ~ "LIC-cDNA-nonpolyA",
sample =="Copenhageni_Basecalled_Aug_16_2019_Direct-cDNA_PolyATail_rna_filtered"~"LIC-cDNA-polyA"
)
)
ggplot(tts_window_cDNA, aes(x=cluster_window, y= num_tts))+
geom_point()+
facet_wrap(vars(samples), ncol = 1,scales = "free_y")+
scale_x_continuous(breaks = seq(0,150,5))+
theme_bw()+
labs(x="Window Size", y = "number of tts")
tts_window_dRNA <- read.csv(file.path(tu_path, "window","dRNA_samples_window_search_TTS.tab"), sep="\t") %>% mutate(samples=
case_when(
sample =="LIC_NOPOLYA_rna_filtered"~ "LIC-dRNA-nonpolyA",
sample =="LIC_POLYA_DRNA_CDNA_rna_filtered" ~ "LIC-dRNA-cDNA-polyA",
sample =="LIC_POLYA_rna_filtered" ~ "LIC-dRNA-polyA",
sample =="Q29_Copenhageni_Basecalled_May_22_2020_Direct-RNA_rna_filtered" ~ "Q29-dRNA-nonpolyA-R1",
sample =="Q29_Copenhageni_Basecalled-June_11_2020_Repeat_Direct-RNA_rna_filtered" ~ "Q29-dRNA-nonpolyA-R2",
sample =="Q36_Copenhageni_Basecalled_June_9_2020-Repeat_Direct-RNA_rna_filtered" ~ "Q36-dRNA-nonpolyA-R2",
sample =="Q36_Copenhageni_Basecalled_May_31_2020_Direct-RNA_rna_filtered" ~ "Q36-dRNA-nonpolyA-R1")
)
ggplot(tts_window_dRNA, aes(x=cluster_window, y= num_tts))+
geom_point()+
facet_wrap(vars(samples), ncol = 1,scales = "free_y")+
scale_x_continuous(breaks = seq(0,150,5))+
theme_bw()+
labs(x="Window Size", y = "number of TSS")
tss_window_cDNA <- read.csv(file.path(tu_path, "output","window", "cDNA_samples_window_search_TTS.tab"), sep="\t") %>% mutate(samples=
case_when(
sample == "Copenhageni_Basecalled_Aug_16_2019_Direct-cDNA_NoPolyATail_Qiagen_rna_filtered" ~ "LIC-cDNA-nonpolyA_Q",
sample =="Copenhageni_Basecalled_Aug_16_2019_Direct-cDNA_NoPolyATail_rna_filtered" ~ "LIC-cDNA-nonpolyA",
sample =="Copenhageni_Basecalled_Aug_16_2019_Direct-cDNA_PolyATail_rna_filtered"~"LIC-cDNA-polyA"
)
)
tss_window_cDNA <- read.csv(file.path(tu_path,"window", "cDNA_samples_window_search_TTS.tab"), sep="\t") %>% mutate(samples=
case_when(
sample == "Copenhageni_Basecalled_Aug_16_2019_Direct-cDNA_NoPolyATail_Qiagen_rna_filtered" ~ "LIC-cDNA-nonpolyA_Q",
sample =="Copenhageni_Basecalled_Aug_16_2019_Direct-cDNA_NoPolyATail_rna_filtered" ~ "LIC-cDNA-nonpolyA",
sample =="Copenhageni_Basecalled_Aug_16_2019_Direct-cDNA_PolyATail_rna_filtered"~"LIC-cDNA-polyA"
)
)
ggplot(tss_window_cDNA, aes(x=cluster_window, y= num_tss))+
geom_point()+
facet_wrap(vars(samples), ncol = 1,scales = "free_y")+
scale_x_continuous(breaks = seq(0,150,5))+
theme_bw()+
labs(x="Window Size", y = "number of TSS")
tss_window_cDNA
ggplot(tss_window_cDNA, aes(x=cluster_window, y= num_tts))+
geom_point()+
facet_wrap(vars(samples), ncol = 1,scales = "free_y")+
scale_x_continuous(breaks = seq(0,150,5))+
theme_bw()+
labs(x="Window Size", y = "number of TSS")
library(dplyr)
library(tidyr)
library(ggplot2)
tts_path <- "/Users/rx32940/Dropbox/5.Rachel-projects/Transcriptomics_PolyATail/tu_annotation/TTS"
tss_window_cDNA <- read.csv(file.path(tts_path,"window", "cDNA_samples_window_search_TTS.tab"), sep="\t") %>% mutate(samples=
case_when(
sample == "Copenhageni_Basecalled_Aug_16_2019_Direct-cDNA_NoPolyATail_Qiagen_rna_filtered" ~ "LIC-cDNA-nonpolyA_Q",
sample =="Copenhageni_Basecalled_Aug_16_2019_Direct-cDNA_NoPolyATail_rna_filtered" ~ "LIC-cDNA-nonpolyA",
sample =="Copenhageni_Basecalled_Aug_16_2019_Direct-cDNA_PolyATail_rna_filtered"~"LIC-cDNA-polyA"
)
)
ggplot(tss_window_cDNA, aes(x=cluster_window, y= num_tts))+
geom_point()+
facet_wrap(vars(samples), ncol = 1,scales = "free_y")+
scale_x_continuous(breaks = seq(0,150,5))+
theme_bw()+
labs(x="Window Size", y = "number of TSS")
tss_window_dRNA <- read.csv(file.path(tts_path, "window", "dRNA_samples_window_search_TTS.tab"), sep="\t") %>% mutate(samples=
case_when(
sample =="LIC_NOPOLYA_rna_filtered"~ "LIC-dRNA-nonpolyA",
sample =="LIC_POLYA_DRNA_CDNA_rna_filtered" ~ "LIC-dRNA-cDNA-polyA",
sample =="LIC_POLYA_rna_filtered" ~ "LIC-dRNA-polyA",
sample =="Q29_Copenhageni_Basecalled_May_22_2020_Direct-RNA_rna_filtered" ~ "Q29-dRNA-nonpolyA-R1",
sample =="Q29_Copenhageni_Basecalled-June_11_2020_Repeat_Direct-RNA_rna_filtered" ~ "Q29-dRNA-nonpolyA-R2",
sample =="Q36_Copenhageni_Basecalled_June_9_2020-Repeat_Direct-RNA_rna_filtered" ~ "Q36-dRNA-nonpolyA-R2",
sample =="Q36_Copenhageni_Basecalled_May_31_2020_Direct-RNA_rna_filtered" ~ "Q36-dRNA-nonpolyA-R1")
)
ggplot(tss_window_dRNA, aes(x=cluster_window, y= num_tss))+
geom_point()+
facet_wrap(vars(samples), ncol = 1,scales = "free_y")+
scale_x_continuous(breaks = seq(0,150,5))+
theme_bw()+
labs(x="Window Size", y = "number of TSS")
ggplot(tss_window_dRNA, aes(x=cluster_window, y= num_tts))+
geom_point()+
facet_wrap(vars(samples), ncol = 1,scales = "free_y")+
scale_x_continuous(breaks = seq(0,150,5))+
theme_bw()+
labs(x="Window Size", y = "number of TSS")
ggplot(tss_window_cDNA, aes(x=cluster_window, y= num_tts))+
geom_point()+
facet_wrap(vars(samples), ncol = 1,scales = "free_y")+
scale_x_continuous(breaks = seq(0,150,5))+
theme_bw()+
labs(x="Window Size", y = "number of TTS")
tss_window_dRNA <- read.csv(file.path(tts_path, "window", "dRNA_samples_window_search_TTS.tab"), sep="\t") %>% mutate(samples=
case_when(
sample =="LIC_NOPOLYA_rna_filtered"~ "LIC-dRNA-nonpolyA",
sample =="LIC_POLYA_DRNA_CDNA_rna_filtered" ~ "LIC-dRNA-cDNA-polyA",
sample =="LIC_POLYA_rna_filtered" ~ "LIC-dRNA-polyA",
sample =="Q29_Copenhageni_Basecalled_May_22_2020_Direct-RNA_rna_filtered" ~ "Q29-dRNA-nonpolyA-R1",
sample =="Q29_Copenhageni_Basecalled-June_11_2020_Repeat_Direct-RNA_rna_filtered" ~ "Q29-dRNA-nonpolyA-R2",
sample =="Q36_Copenhageni_Basecalled_June_9_2020-Repeat_Direct-RNA_rna_filtered" ~ "Q36-dRNA-nonpolyA-R2",
sample =="Q36_Copenhageni_Basecalled_May_31_2020_Direct-RNA_rna_filtered" ~ "Q36-dRNA-nonpolyA-R1")
)
ggplot(tss_window_dRNA, aes(x=cluster_window, y= num_tts))+
geom_point()+
facet_wrap(vars(samples), ncol = 1,scales = "free_y")+
scale_x_continuous(breaks = seq(0,150,5))+
theme_bw()+
labs(x="Window Size", y = "number of TTS")
lead_TTS_files_cDNA <- list.files(file.path(tu_path, "combined_output", "raw_TTS_clustered"), pattern = paste0("*cDNA_raw_TTS_clustered_", window_size,".csv") ,full.names = TRUE)
lead_TTS_files_cDNA <- list.files(file.path(tu_path, "combined_output"), pattern = paste0("*cDNA_raw_TTS_clustered_", window_size,".csv") ,full.names = TRUE)
####################################################################################################
#### cDNA check
########################################################################################################
# all_cdna_sample_window <- data.frame(window_size=as.integer(), l1vl2=as.integer(),l2vl3=as.integer(),l1vl3=as.integer(),intersect=as.integer())
# for (window_size in seq(0,300,10)){
window_size <- 10
lead_TTS_files_cDNA <- list.files(file.path(tu_path, "combined_output"), pattern = paste0("*cDNA_raw_TTS_clustered_", window_size,".csv") ,full.names = TRUE)
cDNA_lead_tts <- lapply(lead_TTS_files_cDNA, function(x){read.csv(x, col.names = c("chrom",	"start",	"strand",	"gene",	"LIC.cDNA.nonpolyA_Q",	"LIC.cDNA.polyA",	"LIC.cDNA.nonpolyA", "cluster"))})
cDNA_lead_tts_df <- do.call(rbind, cDNA_lead_tts) %>% arrange(chrom)
l1 <- cDNA_lead_tts_df %>% subset(LIC.cDNA.nonpolyA_Q == "x")  %>% select(cluster) %>% unlist()
l2 <- cDNA_lead_tts_df %>% subset(LIC.cDNA.polyA == "x")  %>% select(cluster) %>% unlist()
l3 <- cDNA_lead_tts_df %>% subset(LIC.cDNA.nonpolyA == "x")  %>% select(cluster) %>% unlist()
library(VennDiagram)
library(RColorBrewer)
library(UpSetR)
venn.diagram(
x = list(l1, l2,l3),
category.names = c("LIC.cDNA.nonpolyA_Q " , "LIC.cDNA.polyA","LIC.cDNA.nonpolyA"),
filename = file.path(tu_path, "figures",'cDNA_replicates_TTS_intersect.png'),
output=TRUE,
fill=brewer.pal(3, "Pastel2"))
venn.diagram(
x = list(l1, l2,l3),
category.names = c("LIC.cDNA.nonpolyA_Q " , "LIC.cDNA.polyA","LIC.cDNA.nonpolyA"),
filename = file.path(tts_path, "figures",'cDNA_replicates_TTS_intersect.png'),
output=TRUE,
fill=brewer.pal(3, "Pastel2"))
venn.diagram(
x = list(l1, l2,l3),
category.names = c("LIC.cDNA.nonpolyA_Q " , "LIC.cDNA.polyA","LIC.cDNA.nonpolyA"),
filename = file.path(tts_path, "figures",'cDNA_replicates_TTS_intersect.png'),
output=TRUE,
fill=brewer.pal(3, "Pastel2"))
venn.diagram(
x = list(l1, l2,l3),
category.names = c("LIC.cDNA.nonpolyA_Q " , "LIC.cDNA.polyA","LIC.cDNA.nonpolyA"),
filename = file.path(tts_path, "figures",'cDNA_replicates_TTS_intersect.png'),
output=TRUE,
fill=brewer.pal(3, "Pastel2"))
lead_TTS_files_drna <- list.files(file.path(tu_path, "output", "raw_TTS_clustered"), pattern = paste0("*rawdRNA_raw_TTS_clustered_",window_size,".csv") ,full.names = TRUE)
window_size <- 10
drna_lead_tts <- lapply(lead_TTS_files_drna, function(x){read.csv(x, col.names = c("chrom",	"start",	"strand",	"gene",	"LIC-dRNA-nonpolyA","Q29-dRNA-nonpolyA-R2","Q29-dRNA-nonpolyA-R1",		"LIC-dRNA-polyA",	"LIC-dRNA-cDNA-polyA", "cluster"))})
drna_lead_tts_df <- do.call(rbind, drna_lead_tts) %>% group_by(chrom, strand)%>%arrange(start, .by_group = TRUE)
l1 <- drna_lead_tts_df %>% subset(`LIC.dRNA.polyA` == "x")  %>% select(cluster) %>% unlist()
drna_lead_tts_df <- do.call(rbind, drna_lead_tts) %>% group_by(chrom, strand)%>%arrange(start, .by_group = TRUE)
drna_lead_tts
lead_TTS_files_drna <- list.files(file.path(tu_path, "combined_output"), pattern = paste0("*rawdRNA_raw_TTS_clustered_",window_size,".csv") ,full.names = TRUE)
window_size <- 10
drna_lead_tts <- lapply(lead_TTS_files_drna, function(x){read.csv(x, col.names = c("chrom",	"start",	"strand",	"gene",	"LIC-dRNA-nonpolyA","Q29-dRNA-nonpolyA-R2","Q29-dRNA-nonpolyA-R1",		"LIC-dRNA-polyA",	"LIC-dRNA-cDNA-polyA", "cluster"))})
drna_lead_tts_df <- do.call(rbind, drna_lead_tts) %>% group_by(chrom, strand)%>%arrange(start, .by_group = TRUE)
l1 <- drna_lead_tts_df %>% subset(`LIC.dRNA.polyA` == "x")  %>% select(cluster) %>% unlist()
l2 <- drna_lead_tts_df %>% subset(`LIC.dRNA.cDNA.polyA` == "x")  %>% select(cluster) %>% unlist()
l3 <- drna_lead_tts_df %>% subset(`LIC.dRNA.nonpolyA` == "x")  %>% select(cluster) %>% unlist()
l4 <- drna_lead_tts_df %>% subset(`Q29.dRNA.nonpolyA.R1` == "x")  %>% select(cluster) %>% unlist()
l5 <- drna_lead_tts_df %>% subset(`Q29.dRNA.nonpolyA.R2` == "x")  %>% select(cluster) %>% unlist()
length(l5)
length(intersect(l1,l3))
# cur_window <- data.frame(window_size=window_size,  intersect=length(Reduce(intersect, list(l1,l2,l3,l4,l5))))
# all_drna_sample_window <- rbind(all_drna_sample_window,cur_window)
# }
#
# # all_drna_sample_window_longer <- all_drna_sample_window %>% pivot_longer(names_to = "comparison", values_to = "num_intersect", cols = starts_with("l"))
# ggplot(all_drna_sample_window, aes(x=window_size, y=intersect))+
#   geom_point()+
#     scale_x_continuous(breaks = seq(0,300,10))+
#   theme_bw()
#
upset(fromList(list(LIC.dRNA.polyA=l1, LIC.dRNA.cDNA.polyA=l2,LIC.dRNA.nonpolyA=l3,Q29.dRNA.nonpolyA.R1=l4,Q29.dRNA.nonpolyA.R2=l5)), sets= c("LIC.dRNA.polyA" , "LIC.dRNA.cDNA.polyA","LIC.dRNA.nonpolyA", "Q29.dRNA.nonpolyA.R1", "Q29.dRNA.nonpolyA.R2"))
samples_cDNA <- c("LIC-cDNA-nonpolyA_Q",	"LIC-cDNA-polyA","LIC-cDNA-nonpolyA")
samples_dRNA <- c("LIC-dRNA-nonpolyA","Q29-dRNA-nonpolyA-R1","Q29-dRNA-nonpolyA-R2",		"LIC-dRNA-cDNA-polyA",	"LIC-dRNA-polyA")
#######################################################################
#
# filter TTS for cDNA sequenced samples
#
#######################################################################
# file_name <- lead_TTS_files_cDNA[2]
filter_lead_TTS_cDNA <- function(file_name){
chromI_lead_tts <- read.csv(file_name, row.names = 1, col.names = c("chrom",	"start",	"strand",	"gene",	samples_cDNA , "cluster"))
# # TTS cluster with support of at least two samples were selected
# cluster_filtered <- chromI_lead_tts %>% pivot_longer(cols = c(starts_with("LIC")), names_to = "samples", values_to = "present") %>% subset(!is.na(present)) %>% group_by(cluster) %>% mutate(sample_present=n_distinct(samples)) %>% subset(!sample_present < 2) %>% select(cluster) %>% unlist()
# in every cluster, the most far left (5') site were identified as teh TTS of the cluster, only cluster with at least 2 samples were selected
chromI_lead_tts_filtered <- chromI_lead_tts %>% pivot_longer(cols = c(starts_with("LIC")), names_to = "samples", values_to = "present") %>% subset(!is.na(present)) %>%  group_by(cluster) %>% mutate(TTS_min = max(start)) %>% select(-start) %>% ungroup() %>% distinct()%>% pivot_wider(names_from = samples, values_from = present) #%>% subset(!(is.na(LIC.cDNA.polyA) & !cluster %in% cluster_filtered)) %>% distinct( .keep_all = TRUE) # filter,drop TTS didn't find in the polyA sample and only existed in one of the nonpolyA samples
chromI_lead_tts_filtered
}
#######################################################################
#
# filter TTS for dRNA sequenced samples
#
#######################################################################
# file_name <- lead_TTS_files_dRNA[2]
filter_lead_TTS_dRNA <- function(file_name){
chromI_lead_tts <- read.csv(file_name, row.names = 1, col.names = c("chrom",	"start",	"strand",	"gene",	samples_dRNA , "cluster"))
# # TTS cluster with support of at least two samples were selected
# cluster_filtered <- chromI_lead_tts %>% pivot_longer(cols = c(starts_with("LIC"), starts_with("Q")), names_to = "samples", values_to = "present") %>% subset(!is.na(present)) %>% group_by(cluster) %>% mutate(sample_present=n_distinct(samples))  %>% subset(!sample_present < 2) %>% select(cluster) %>% unlist()
# in every cluster, the most far left (5') site were identified as teh TTS of the cluster, only cluster with at least 2 samples were selected
chromI_lead_tts_filtered <- chromI_lead_tts %>% pivot_longer(cols = c(starts_with("LIC"), starts_with("Q")), names_to = "samples", values_to = "present") %>% subset(!is.na(present)) %>%  group_by(cluster) %>% mutate(TTS_min = max(start)) %>% select(-start) %>% ungroup() %>% distinct() %>% pivot_wider(names_from = samples, values_from = present)#%>% subset(!((is.na(LIC.dRNA.cDNA.polyA) | is.na(LIC.dRNA.polyA)) & !cluster %in% cluster_filtered)) %>% distinct(.keep_all = TRUE) # drop TTS didn't identify in either of the polyA dRNA samples, and also only existed once in other samples.
chromI_lead_tts_filtered
}
# identify TTS using cDNA samples
lead_TTS_files_cDNA <- list.files(file.path(tu_path, "combined_output"), pattern = "*leadrawcDNA_raw_TTS_clustered_10.csv", full.names = TRUE)
lead_TTS_filtered_list <- lapply(lead_TTS_files_cDNA, filter_lead_TTS_cDNA)
cDNA_TTS_final <- do.call(rbind, lead_TTS_filtered_list)%>%group_by(chrom) %>%arrange(TTS_min,.by_group = TRUE) %>% distinct(cluster, .keep_all = TRUE)# %>% select(!c("cluster")) %>% distinct(start, .keep_all = TRUE) %>% arrange(start)
cDNA_TTS_final
# file_name <- lag_TTS_files[2]
samples_cDNA <- c("LIC-cDNA-nonpolyA_Q",		"LIC-cDNA-polyA","LIC-cDNA-nonpolyA")
samples_dRNA <- c("LIC-dRNA-nonpolyA","Q29-dRNA-nonpolyA-R2","Q29-dRNA-nonpolyA-R1","LIC-dRNA-polyA",	"LIC-dRNA-cDNA-polyA")
#######################################################################
#
# filter TTS for cDNA sequenced samples
#
#######################################################################
# file_name <- lag_TTS_files_cDNA[2]
filter_lag_TTS_cDNA <- function(file_name){
chromI_lag_tts <- read.csv(file_name, row.names = 1, col.names = c("chrom",	"start",	"strand",	"gene",	samples_cDNA , "cluster"))
# TTS cluster with support of at least two samples were selected
cluster_filtered <- chromI_lag_tts %>% pivot_longer(cols = c(starts_with("LIC")), names_to = "samples", values_to = "present") %>% subset(!is.na(present)) %>% group_by(cluster) %>% count() %>% subset(!n < 2) %>% select(cluster) %>% unlist()
# in every cluster, the most far left (5') site were identified as teh TTS of the cluster, only cluster with at least 2 samples were selected
chromI_lag_tts_filtered <- chromI_lag_tts %>% pivot_longer(cols = c(starts_with("LIC")), names_to = "samples", values_to = "present") %>% subset(!is.na(present)) %>%  group_by(cluster) %>% mutate(TTS_max = min(start)) %>% select(-start) %>% ungroup() %>% distinct()%>% pivot_wider(names_from = samples, values_from = present)# %>% subset(!(is.na(LIC.cDNA.polyA) & !cluster %in% cluster_filtered)) %>% distinct( .keep_all = TRUE) # filter,drop TTS didn't find in the polyA sample and only existed in one of the nonpolyA samples
chromI_lag_tts_filtered
}
#######################################################################
#
# filter TTS for dRNA sequenced samples
#
#######################################################################
# file_name <- lag_TTS_files_dRNA[2]
filter_lag_TTS_dRNA <- function(file_name){
chromI_lag_tts <- read.csv(file_name, row.names = 1, col.names = c("chrom",	"start",	"strand",	"gene",	samples_dRNA , "cluster"))
# TTS cluster with support of at least two samples were selected
cluster_filtered <- chromI_lag_tts %>% pivot_longer(cols = c(starts_with("LIC"), starts_with("Q")), names_to = "samples", values_to = "present") %>% subset(!is.na(present)) %>% group_by(cluster) %>% count() %>% subset(!n < 2) %>% select(cluster) %>% unlist()
# in every cluster, the most far left (5') site were identified as teh TTS of the cluster, only cluster with at least 2 samples were selected
chromI_lag_tts_filtered <- chromI_lag_tts %>% pivot_longer(cols = c(starts_with("LIC"), starts_with("Q")), names_to = "samples", values_to = "present") %>% subset(!is.na(present)) %>%  group_by(cluster) %>% mutate(TTS_max = min(start)) %>% select(-start) %>% ungroup() %>% distinct() %>% pivot_wider(names_from = samples, values_from = present)#%>% subset(!((is.na(LIC.dRNA.cDNA.polyA) | is.na(LIC.dRNA.polyA)) & !cluster %in% cluster_filtered)) %>% distinct(.keep_all = TRUE) # drop TTS didn't identify in both of the polyA dRNA samples, and also only existed once in other samples.
chromI_lag_tts_filtered
}
# identify TTS using cDNA samples
lag_TTS_files_cDNA <- list.files(file.path(tu_path, "output", "raw_TTS_clustered"), pattern = "*lagrawcDNA_raw_TTS_clustered_10.csv", full.names = TRUE)
lag_TTS_files_cDNA
# identify TTS using cDNA samples
lag_TTS_files_cDNA <- list.files(file.path(tu_path, "combined_output"), pattern = "*lagrawcDNA_raw_TTS_clustered_10.csv", full.names = TRUE)
lag_TTS_filtered_list <- lapply(lag_TTS_files_cDNA, filter_lag_TTS_cDNA)
cDNA_TTS_final <- do.call(rbind, lag_TTS_filtered_list)%>% group_by(chrom)  %>% arrange(TTS_max, .by_group = TRUE)%>% distinct(cluster, .keep_all = TRUE)%>% select(!c("cluster"))
cDNA_TTS_final
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyr)
library(ggplot2)
tu_path <- "/Users/rx32940/Dropbox/5.Rachel-projects/Transcriptomics_PolyATail/tu_annotation/TSS"
tss_window_cDNA <- read.csv(file.path(tu_path, "output","combined", "cDNA_samples_window_search_TSS.tab"), sep="\t") %>% mutate(samples=
case_when(
sample == "Copenhageni_Basecalled_Aug_16_2019_Direct-cDNA_NoPolyATail_Qiagen_rna_filtered" ~ "LIC-cDNA-nonpolyA_Q",
sample =="Copenhageni_Basecalled_Aug_16_2019_Direct-cDNA_NoPolyATail_rna_filtered" ~ "LIC-cDNA-nonpolyA",
sample =="Copenhageni_Basecalled_Aug_16_2019_Direct-cDNA_PolyATail_rna_filtered"~"LIC-cDNA-polyA"
)
)
tss_window_cDNA <- read.csv(file.path(tu_path, "output","window", "cDNA_samples_window_search_TSS.tab"), sep="\t") %>% mutate(samples=
case_when(
sample == "Copenhageni_Basecalled_Aug_16_2019_Direct-cDNA_NoPolyATail_Qiagen_rna_filtered" ~ "LIC-cDNA-nonpolyA_Q",
sample =="Copenhageni_Basecalled_Aug_16_2019_Direct-cDNA_NoPolyATail_rna_filtered" ~ "LIC-cDNA-nonpolyA",
sample =="Copenhageni_Basecalled_Aug_16_2019_Direct-cDNA_PolyATail_rna_filtered"~"LIC-cDNA-polyA"
)
)
tss_window_cDNA <- read.csv(file.path(tu_path, "output","window", "cDNA_samples_window_search_TSS.tab"), sep="\t") %>% mutate(samples=
case_when(
sample == "Copenhageni_Basecalled_Aug_16_2019_Direct-cDNA_NoPolyATail_Qiagen_rna_filtered" ~ "LIC-cDNA-nonpolyA_Q",
sample =="Copenhageni_Basecalled_Aug_16_2019_Direct-cDNA_NoPolyATail_rna_filtered" ~ "LIC-cDNA-nonpolyA",
sample =="Copenhageni_Basecalled_Aug_16_2019_Direct-cDNA_PolyATail_rna_filtered"~"LIC-cDNA-polyA"
)
)
ggplot(tss_window_cDNA, aes(x=cluster_window, y= num_tss))+
geom_point()+
facet_wrap(vars(samples), ncol = 1,scales = "free_y")+
scale_x_continuous(breaks = seq(0,150,5))+
theme_bw()+
labs(x="Window Size", y = "number of TSS")
tss_window_dRNA <- read.csv(file.path(tu_path, "output","combined", "dRNA_samples_window_search_TSS.tab"), sep="\t") %>% mutate(samples=
case_when(
sample =="LIC_NOPOLYA_rna_filtered"~ "LIC-dRNA-nonpolyA",
sample =="LIC_POLYA_DRNA_CDNA_rna_filtered" ~ "LIC-dRNA-cDNA-polyA",
sample =="LIC_POLYA_rna_filtered" ~ "LIC-dRNA-polyA",
sample =="Q29_Copenhageni_Basecalled_May_22_2020_Direct-RNA_rna_filtered" ~ "Q29-dRNA-nonpolyA-R1",
sample =="Q29_Copenhageni_Basecalled-June_11_2020_Repeat_Direct-RNA_rna_filtered" ~ "Q29-dRNA-nonpolyA-R2",
sample =="Q36_Copenhageni_Basecalled_June_9_2020-Repeat_Direct-RNA_rna_filtered" ~ "Q36-dRNA-nonpolyA-R2",
sample =="Q36_Copenhageni_Basecalled_May_31_2020_Direct-RNA_rna_filtered" ~ "Q36-dRNA-nonpolyA-R1")
)
tss_window_dRNA <- read.csv(file.path(tu_path, "output","window", "dRNA_samples_window_search_TSS.tab"), sep="\t") %>% mutate(samples=
case_when(
sample =="LIC_NOPOLYA_rna_filtered"~ "LIC-dRNA-nonpolyA",
sample =="LIC_POLYA_DRNA_CDNA_rna_filtered" ~ "LIC-dRNA-cDNA-polyA",
sample =="LIC_POLYA_rna_filtered" ~ "LIC-dRNA-polyA",
sample =="Q29_Copenhageni_Basecalled_May_22_2020_Direct-RNA_rna_filtered" ~ "Q29-dRNA-nonpolyA-R1",
sample =="Q29_Copenhageni_Basecalled-June_11_2020_Repeat_Direct-RNA_rna_filtered" ~ "Q29-dRNA-nonpolyA-R2",
sample =="Q36_Copenhageni_Basecalled_June_9_2020-Repeat_Direct-RNA_rna_filtered" ~ "Q36-dRNA-nonpolyA-R2",
sample =="Q36_Copenhageni_Basecalled_May_31_2020_Direct-RNA_rna_filtered" ~ "Q36-dRNA-nonpolyA-R1")
)
ggplot(tss_window_dRNA, aes(x=cluster_window, y= num_tss))+
geom_point()+
facet_wrap(vars(samples), ncol = 1,scales = "free_y")+
scale_x_continuous(breaks = seq(0,150,5))+
theme_bw()+
labs(x="Window Size", y = "number of TSS")
####################################################################################################
#### cDNA check
########################################################################################################
# all_cdna_sample_window <- data.frame(window_size=as.integer(), l1vl2=as.integer(),l2vl3=as.integer(),l1vl3=as.integer(),intersect=as.integer())
# for (window_size in seq(0,300,10)){
window_size <- 10
lead_TSS_files_cDNA <- list.files(file.path(tu_path, "output", "raw_TSS_clustered"), pattern = paste0("*cDNA_raw_TSS_clustered_", window_size,".csv") ,full.names = TRUE)
cDNA_lead_tss <- lapply(lead_TSS_files_cDNA, function(x){read.csv(x, col.names = c("chrom",	"start",	"strand",	"gene",	"LIC.cDNA.nonpolyA_Q",	"LIC.cDNA.polyA",	"LIC.cDNA.nonpolyA", "cluster"))})
cDNA_lead_tss_df <- do.call(rbind, cDNA_lead_tss) %>% arrange(chrom)
l1 <- cDNA_lead_tss_df %>% subset(LIC.cDNA.nonpolyA_Q == "x")  %>% select(cluster) %>% unlist()
l2 <- cDNA_lead_tss_df %>% subset(LIC.cDNA.polyA == "x")  %>% select(cluster) %>% unlist()
l3 <- cDNA_lead_tss_df %>% subset(LIC.cDNA.nonpolyA == "x")  %>% select(cluster) %>% unlist()
# cur_window <- data.frame(window_size=window_size, l1vl2=length(intersect(l1,l2)), l2vl3=length(intersect(l2,l3)), l1vl3=length(intersect(l1,l3)), intersect=length(Reduce(intersect, list(l1,l2,l3))))
# all_cdna_sample_window <- rbind(all_cdna_sample_window,cur_window)
# }
#
# all_cdna_sample_window_longer <- all_cdna_sample_window %>% pivot_longer(names_to = "comparison", values_to = "num_intersect", cols = starts_with("l"))
#
# ggplot(all_cdna_sample_window_longer, aes(x=window_size, y=intersect))+
#   geom_point()+
#     scale_x_continuous(breaks = seq(0,300,10))+
#   theme_bw()
library(VennDiagram)
library(RColorBrewer)
library(UpSetR)
venn.diagram(
x = list(l1, l2,l3),
category.names = c("LIC.cDNA.nonpolyA_Q " , "LIC.cDNA.polyA","LIC.cDNA.nonpolyA"),
filename = file.path(tu_path, "figures",'cDNA_replicates_TSS_intersect.png'),
output=TRUE,
fill=brewer.pal(3, "Pastel2"))
####################################################################################################
#### dRNA check
########################################################################################################
# all_drna_sample_window <- data.frame(window_size=as.integer(), intersect=as.integer())
# for (window_size in seq(0,300,10)){
lead_TSS_files_drna <- list.files(file.path(tu_path, "output", "raw_TSS_clustered"), pattern = paste0("*rawdRNA_raw_TSS_clustered_",window_size,".csv") ,full.names = TRUE)
window_size <- 10
drna_lead_tss <- lapply(lead_TSS_files_drna, function(x){read.csv(x, col.names = c("chrom",	"start",	"strand",	"gene",	"LIC-dRNA-nonpolyA","Q29-dRNA-nonpolyA-R2","Q29-dRNA-nonpolyA-R1",		"LIC-dRNA-polyA",	"LIC-dRNA-cDNA-polyA", "cluster"))})
drna_lead_tss_df <- do.call(rbind, drna_lead_tss) %>% group_by(chrom, strand)%>%arrange(start, .by_group = TRUE)
lead_TSS_files_drna <- list.files(file.path(tu_path, "output", "raw_TSS_clustered"), pattern = paste0("*rawdRNA_raw_TSS_clustered_",window_size,".csv") ,full.names = TRUE)
window_size <- 10
drna_lead_tss <- lapply(lead_TSS_files_drna, function(x){read.csv(x, col.names = c("chrom",	"start",	"strand",	"gene",	"LIC-dRNA-nonpolyA","Q29-dRNA-nonpolyA-R2","Q29-dRNA-nonpolyA-R1",		"LIC-dRNA-polyA",	"LIC-dRNA-cDNA-polyA", "cluster"))})
drna_lead_tss_df <- do.call(rbind, drna_lead_tss) %>% group_by(chrom, strand)%>%arrange(start, .by_group = TRUE)
lead_TSS_files_drna
lead_TSS_files_cDNA
lead_TSS_files_cDNA <- list.files(file.path(tu_path, "output", "raw_TSS_clustered"), pattern = paste0("*cDNA_raw_TSS_clustered_", window_size,".csv") ,full.names = TRUE)
cDNA_lead_tss <- lapply(lead_TSS_files_cDNA, function(x){read.csv(x, col.names = c("chrom",	"start",	"strand",	"gene",	"LIC.cDNA.nonpolyA_Q",	"LIC.cDNA.polyA",	"LIC.cDNA.nonpolyA", "cluster"))})
cDNA_lead_tss_df <- do.call(rbind, cDNA_lead_tss) %>% arrange(chrom)
l1 <- cDNA_lead_tss_df %>% subset(LIC.cDNA.nonpolyA_Q == "x")  %>% select(cluster) %>% unlist()
l2 <- cDNA_lead_tss_df %>% subset(LIC.cDNA.polyA == "x")  %>% select(cluster) %>% unlist()
l3 <- cDNA_lead_tss_df %>% subset(LIC.cDNA.nonpolyA == "x")  %>% select(cluster) %>% unlist()
library(VennDiagram)
library(RColorBrewer)
library(UpSetR)
venn.diagram(
x = list(l1, l2,l3),
category.names = c("LIC.cDNA.nonpolyA_Q " , "LIC.cDNA.polyA","LIC.cDNA.nonpolyA"),
filename = file.path(tu_path, "figures",'cDNA_replicates_TSS_intersect.png'),
output=TRUE,
fill=brewer.pal(3, "Pastel2"))
lead_TSS_files_drna <- list.files(file.path(tu_path, "output", "raw_TSS_clustered"), pattern = paste0("*rawdRNA_raw_TSS_clustered_",window_size,".csv") ,full.names = TRUE)
window_size <- 10
drna_lead_tss <- lapply(lead_TSS_files_drna, function(x){read.csv(x, col.names = c("chrom",	"start",	"strand",	"gene",	"LIC-dRNA-nonpolyA","Q29-dRNA-nonpolyA-R2","Q29-dRNA-nonpolyA-R1",		"LIC-dRNA-polyA",	"LIC-dRNA-cDNA-polyA", "cluster"))})
drna_lead_tss_df <- do.call(rbind, drna_lead_tss) %>% group_by(chrom, strand)%>%arrange(start, .by_group = TRUE)
lead_TSS_files_drna <- list.files(file.path(tu_path, "output", "raw_TSS_clustered"), pattern = paste0("*rawdRNA_raw_TSS_clustered_",window_size,".csv") ,full.names = TRUE)
lead_TSS_files_drna <- list.files(file.path(tu_path, "output", "raw_TSS_clustered"), pattern = paste0("*rawdRNA_raw_TSS_clustered_",window_size,".csv") ,full.names = TRUE)
lead_TSS_files_drna
lead_TSS_files_drna <- list.files(file.path(tu_path, "output", "raw_TSS_clustered"), pattern = paste0("*rawdRNA_raw_TSS_clustered_",window_size,".csv") ,full.names = TRUE)
window_size <- 10
drna_lead_tss <- lapply(lead_TSS_files_drna, function(x){read.csv(x, col.names = c("chrom",	"start",	"strand",	"gene",	"LIC-dRNA-nonpolyA","Q29-dRNA-nonpolyA-R2","Q29-dRNA-nonpolyA-R1",		"LIC-dRNA-polyA",	"LIC-dRNA-cDNA-polyA", "cluster"))})
drna_lead_tss_df <- do.call(rbind, drna_lead_tss) %>% group_by(chrom, strand)%>%arrange(start, .by_group = TRUE)
l1 <- drna_lead_tss_df %>% subset(`LIC.dRNA.polyA` == "x")  %>% select(cluster) %>% unlist()
l2 <- drna_lead_tss_df %>% subset(`LIC.dRNA.cDNA.polyA` == "x")  %>% select(cluster) %>% unlist()
l3 <- drna_lead_tss_df %>% subset(`LIC.dRNA.nonpolyA` == "x")  %>% select(cluster) %>% unlist()
l4 <- drna_lead_tss_df %>% subset(`Q29.dRNA.nonpolyA.R1` == "x")  %>% select(cluster) %>% unlist()
l5 <- drna_lead_tss_df %>% subset(`Q29.dRNA.nonpolyA.R2` == "x")  %>% select(cluster) %>% unlist()
# cur_window <- data.frame(window_size=window_size,  intersect=length(Reduce(intersect, list(l1,l2,l3,l4,l5))))
# all_drna_sample_window <- rbind(all_drna_sample_window,cur_window)
# }
#
# # all_drna_sample_window_longer <- all_drna_sample_window %>% pivot_longer(names_to = "comparison", values_to = "num_intersect", cols = starts_with("l"))
# ggplot(all_drna_sample_window, aes(x=window_size, y=intersect))+
#   geom_point()+
#     scale_x_continuous(breaks = seq(0,300,10))+
#   theme_bw()
#
upset(fromList(list(LIC.dRNA.polyA=l1, LIC.dRNA.cDNA.polyA=l2,LIC.dRNA.nonpolyA=l3,Q29.dRNA.nonpolyA.R1=l4,Q29.dRNA.nonpolyA.R2=l5)), sets= c("LIC.dRNA.polyA" , "LIC.dRNA.cDNA.polyA","LIC.dRNA.nonpolyA", "Q29.dRNA.nonpolyA.R1", "Q29.dRNA.nonpolyA.R2"))
venn.diagram(
x = list(l1, l2,l3,l4,l5),
category.names = c("LIC.dRNA.polyA" , "LIC.dRNA.cDNA.polyA","LIC.dRNA.nonpolyA", "Q29.dRNA.nonpolyA.R1", "Q29.dRNA.nonpolyA.R2"),
filename = file.path(tu_path, "figures",'dRNA_replicates_TSS_intersect.png'),
output=TRUE,
fill=brewer.pal(5, "Pastel2"))
upset(fromList(list(LIC.dRNA.polyA=l1, LIC.dRNA.cDNA.polyA=l2,LIC.dRNA.nonpolyA=l3,Q29.dRNA.nonpolyA.R1=l4,Q29.dRNA.nonpolyA.R2=l5)), sets= c("LIC.dRNA.polyA" , "LIC.dRNA.cDNA.polyA","LIC.dRNA.nonpolyA", "Q29.dRNA.nonpolyA.R1", "Q29.dRNA.nonpolyA.R2"))
l1
upset(fromList(list(LIC.dRNA.polyA=l1, LIC.dRNA.cDNA.polyA=l2,LIC.dRNA.nonpolyA=l3,Q29.dRNA.nonpolyA.R1=l4,Q29.dRNA.nonpolyA.R2=l5)), sets= c("LIC.dRNA.polyA" , "LIC.dRNA.cDNA.polyA","LIC.dRNA.nonpolyA", "Q29.dRNA.nonpolyA.R1", "Q29.dRNA.nonpolyA.R2"))
samples_cDNA <- c("LIC-cDNA-nonpolyA_Q",	"LIC-cDNA-polyA","LIC-cDNA-nonpolyA")
samples_dRNA <- c("LIC-dRNA-nonpolyA","Q29-dRNA-nonpolyA-R1","Q29-dRNA-nonpolyA-R2",		"LIC-dRNA-cDNA-polyA",	"LIC-dRNA-polyA")
#######################################################################
#
# filter TSS for cDNA sequenced samples
#
#######################################################################
# file_name <- lead_TSS_files_cDNA[2]
filter_lead_TSS_cDNA <- function(file_name){
chromI_lead_tss <- read.csv(file_name, row.names = 1, col.names = c("chrom",	"start",	"strand",	"gene",	samples_cDNA , "cluster"))
# # TSS cluster with support of at least two samples were selected
# cluster_filtered <- chromI_lead_tss %>% pivot_longer(cols = c(starts_with("LIC")), names_to = "samples", values_to = "present") %>% subset(!is.na(present)) %>% group_by(cluster) %>% mutate(sample_present=n_distinct(samples)) %>% subset(!sample_present < 2) %>% select(cluster) %>% unlist()
# in every cluster, the most far left (5') site were identified as teh TSS of the cluster, only cluster with at least 2 samples were selected
chromI_lead_tss_filtered <- chromI_lead_tss %>% pivot_longer(cols = c(starts_with("LIC")), names_to = "samples", values_to = "present") %>% subset(!is.na(present)) %>%  group_by(cluster) %>% mutate(TSS_min = min(start)) %>% select(-start) %>% ungroup() %>% distinct()%>% pivot_wider(names_from = samples, values_from = present) #%>% subset(!(is.na(LIC.cDNA.polyA) & !cluster %in% cluster_filtered)) %>% distinct( .keep_all = TRUE) # filter,drop TSS didn't find in the polyA sample and only existed in one of the nonpolyA samples
chromI_lead_tss_filtered
}
#######################################################################
#
# filter TSS for dRNA sequenced samples
#
#######################################################################
# file_name <- lead_TSS_files_dRNA[2]
filter_lead_TSS_dRNA <- function(file_name){
chromI_lead_tss <- read.csv(file_name, row.names = 1, col.names = c("chrom",	"start",	"strand",	"gene",	samples_dRNA , "cluster"))
# # TSS cluster with support of at least two samples were selected
# cluster_filtered <- chromI_lead_tss %>% pivot_longer(cols = c(starts_with("LIC"), starts_with("Q")), names_to = "samples", values_to = "present") %>% subset(!is.na(present)) %>% group_by(cluster) %>% mutate(sample_present=n_distinct(samples))  %>% subset(!sample_present < 2) %>% select(cluster) %>% unlist()
# in every cluster, the most far left (5') site were identified as teh TSS of the cluster, only cluster with at least 2 samples were selected
chromI_lead_tss_filtered <- chromI_lead_tss %>% pivot_longer(cols = c(starts_with("LIC"), starts_with("Q")), names_to = "samples", values_to = "present") %>% subset(!is.na(present)) %>%  group_by(cluster) %>% mutate(TSS_min = min(start)) %>% select(-start) %>% ungroup() %>% distinct() %>% pivot_wider(names_from = samples, values_from = present)#%>% subset(!((is.na(LIC.dRNA.cDNA.polyA) | is.na(LIC.dRNA.polyA)) & !cluster %in% cluster_filtered)) %>% distinct(.keep_all = TRUE) # drop TSS didn't identify in either of the polyA dRNA samples, and also only existed once in other samples.
chromI_lead_tss_filtered
}
# identify TSS using cDNA samples
lead_TSS_files_cDNA <- list.files(file.path(tu_path, "output", "raw_TSS_clustered"), pattern = "*leadrawcDNA_raw_TSS_clustered_10.csv", full.names = TRUE)
lead_TSS_filtered_list <- lapply(lead_TSS_files_cDNA, filter_lead_TSS_cDNA)
cDNA_TSS_final <- do.call(rbind, lead_TSS_filtered_list)%>%group_by(chrom) %>%arrange(TSS_min,.by_group = TRUE) %>% distinct(cluster, .keep_all = TRUE)# %>% select(!c("cluster")) %>% distinct(start, .keep_all = TRUE) %>% arrange(start)
cDNA_TSS_final
Reduce(intersect, list(l1,l3,l4,l5))
Reduce(intersect, list(l1,l3,l5))
Reduce(intersect, list(l1,l3,l4,l5))
Reduce(intersect, list(l1,l3,l5))
upset(fromList(list(LIC.dRNA.polyA=l1, LIC.dRNA.cDNA.polyA=l2,LIC.dRNA.nonpolyA=l3,Q29.dRNA.nonpolyA.R1=l4,Q29.dRNA.nonpolyA.R2=l5)), sets= c("LIC.dRNA.polyA" , "LIC.dRNA.cDNA.polyA","LIC.dRNA.nonpolyA", "Q29.dRNA.nonpolyA.R1", "Q29.dRNA.nonpolyA.R2"))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
salmon.path <- "/Users/rx32940/Dropbox/5.Rachel-projects/transCOVID/complete_dataset/salmon_analysis"
# covid.samples <- c("COVD1_S1", "COVD2_S2", "COVD3_S3", "COVD4_S4", "COVD5_S5", "COVD6_S6", "COVD7_S7", "COVD8_S8", "COVD9_S9", "COVD10_S10")
# covid.samples <- c("COVD2_S2", "COVD3_S3", "COVD4_S4", "COVD5_S5", "COVD6_S6", "COVD7_S7", "COVD9_S9", "COVD10_S10")
# covid.samples <- c( "COVD6_S6", "COVD7_S7", "COVD8_S8", "COVD9_S9", "COVD10_S10")
covid.samples <- c("COVD1_S1", "COVD2_S2", "COVD3_S3", "COVD4_S4", "COVD5_S5")
library(DESeq2)
data.path <- file.path(salmon.path,"map_quant")
sample.info <- read.csv(paste0(salmon.path, "/../sample_meta.csv")) %>% subset(Sample %in% covid.samples)
sample.info
# https://www.cdc.gov/coronavirus/2019-ncov/covid-data/investigations-discovery/hospitalization-death-by-age.html
sample.info$Age.Group <- sapply(sample.info$Age, function(x){ifelse( x<29, "Young.Adult", ifelse(x >=29 & x < 49, "Middle.Aged","Senior.Adult"))})
sample.info$Age.Group <- factor(sample.info$Age.Group,levels=c("Young.Adult","Middle.Aged","Senior.Adult"))
sample.info$Age.Group
sample.info <- sample.info %>% mutate(Covid.status =sapply(Covid.status, function(x){switch(
x,
"COVD -" = "negative",
"COVD +" = "positive"
)}))
sample.info$Age.Group <- factor(sample.info$Age.Group)
sample.info$Covid.status <- factor(sample.info$Covid.status)
sample.info$batch <- factor(sample.info$batch)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyr)
library(ggplot2)
tu_path <- "/Users/rx32940/Dropbox/5.Rachel-projects/Transcriptomics_PolyATail/feature_annotation"
